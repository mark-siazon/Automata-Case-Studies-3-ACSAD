---
interface Props {
  variant?: "primary" | "secondary" | "text";
  size?: "sm" | "md" | "lg";
  type?: "button" | "submit" | "reset";
  class?: string;
  disabled?: boolean;
  ariaLabel?: string;
  id?: string;
  href?: string;
  target?: string;
  rel?: string;
}

const {
  variant = "primary",
  size = "md",
  type = "button",
  class: className = "",
  disabled = false,
  ariaLabel,
  id,
  href,
  target,
  rel,
} = Astro.props;

const baseStyles =
  "inline-flex items-center justify-center font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed";
const variants = {
  primary:
    "bg-white/30 backdrop-blur border border-white/30 shadow-md text-primary hover:bg-white/50 hover:shadow-lg focus:ring-primary/70 transition-all duration-300 hover:scale-[1.02] active:scale-[0.98]",
  secondary:
    "bg-white/20 backdrop-blur border border-white/20 shadow text-secondary hover:bg-white/40 focus:ring-secondary/70 transition-all duration-300 hover:scale-[1.02] active:scale-[0.98]",
  text: "bg-transparent text-text hover:text-text/70 focus:ring-text/50 transition-all duration-300",
};
const sizes = {
  sm: "px-3 py-1.5 text-sm rounded-md",
  md: "px-4 py-2 text-base rounded-lg",
  lg: "px-6 py-3 text-lg rounded-lg",
};

const Tag = href ? "a" : "button";
const attrs = href ? { href, target, rel } : { type };
---

<Tag
  {...attrs}
  class:list={[baseStyles, variants[variant], sizes[size], className]}
  disabled={disabled}
  aria-label={ariaLabel}
  id={id}
>
  <slot />
</Tag>
